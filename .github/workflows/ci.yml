name: CI/CD Pipeline

on:
  push:
    branches: [main, develop, feature/*]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: test_password
          POSTGRES_USER: test_user
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5433:5432

    strategy:
      matrix:
        node-version: [20.x, 22.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Lint check
        run: npm run lint

      - name: TypeScript check
        run: npx tsc --noEmit

      - name: Unit tests
        run: npm test

      - name: Setup test database
        run: |
          DATABASE_URL="postgresql://test_user:test_password@localhost:5433/test_db" npx prisma db push

      - name: E2E tests
        run: npm run test:e2e
        env:
          DATABASE_URL: postgresql://test_user:test_password@localhost:5433/test_db

      - name: Integration tests
        run: npm run test:integration
        env:
          DATABASE_URL: postgresql://test_user:test_password@localhost:5433/test_db

      - name: Test coverage
        run: npm run test:cov

      - name: Build services
        run: |
          npm run build:identity-service
          npm run build:url-shortener-service

  build-docker:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build Docker images
        run: |
          docker-compose build

      - name: Test Docker health
        run: |
          docker-compose up -d
          sleep 30
          docker-compose ps

      - name: Cleanup
        run: docker-compose down
